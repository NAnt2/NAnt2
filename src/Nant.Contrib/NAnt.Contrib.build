<?xml version="1.0"?>
<project name="NAnt.Contrib" default="build">
    <!--
        Required properties:
            * build.dir             - (path) root level to build to, assemblies will go in ${build.dir}/bin
            * build.debug           - (true|false) debug build?
            * build.warnaserror     - (true|false) treat warnings as errors
            * current.build.defines - framework-specific build defines
    -->
    <target name="build" depends="build.slingshot, compile.schemas" description="compiles the source code">
        <!-- build NAnt.Contrib -->

        <!--
            The copying of the xsd would not have been necessary if <resourcefileset>
            supported a <resource> child element that allowed the manifest resource 
            name to be explicitly specified.
            
            TO-DO : remove this "hack" once support for explicit manifest resource
            names is in place.
        -->
        <copy file="${src.dir}/Nant.Contrib/Tasks/Msi/MsiTask.xsd" tofile="${build.dir}/schema/Msi/NAnt.Contrib.Schemas.Msi" />

        <csc target="library" warnaserror="${build.warnaserror}" debug="${build.debug}"
             define="${current.build.defines}"
             output="${build.dir}/bin/${project::get-name()}Tasks.dll"
             doc="${build.dir}/bin/${project::get-name()}Tasks.xml">
            <nowarn>
                <!-- do not report compiler warnings for ambiguous crefs until fixed in mono -->
                <warning number="0419" if="${framework::get-family(framework::get-target-framework()) == 'mono'}" />
                <!-- do not report warnings for missing XML comments -->
                <warning number="1591" />
                <!-- do not report deprecation warnings -->
                <warning number="0612" />
                <warning number="0618" />
                <!-- do not report CLS-compliant warnings -->
                <warning number="3001" />
                <warning number="3002" />
                <warning number="3003" />
                <warning number="3005" />
                <warning number="3008" />
                <!-- ignore AssemblyInformalVersion warning -->
                <warning number="1607" />
            </nowarn>
            <sources>
                <include name="${path::combine(src.dir, 'SolutionInfo.cs')}" />
                <include name="**/*.cs" />
                <!-- Msi.cs file included in project is refreshed when doing a nant build-->
                <!--<include name="${build.dir}/schema/**/*.cs" />-->

                <!-- Requires MS SharePoint -->
                <exclude name="Tasks/SharePoint/*.cs" />
                <exclude name="Tasks/SourceSafe/*.cs" if="${framework::get-family(framework::get-target-framework()) == 'mono'}" />
                <exclude name="Tasks/Msi/*.cs" if="${framework::get-family(framework::get-target-framework()) == 'mono'}" />
            </sources>
            <references>
                <include name="${build.dir}/bin/NAnt.Core.dll" />
                <include name="${build.dir}/bin/NAnt.DotNetTasks.dll" />
                <include name="${build.dir}/bin/NAnt.SourceControlTasks.dll" />
                <include name="${nant::scan-probing-paths('CollectionGen.dll')}" />
                <include name="${nant::scan-probing-paths('SourceSafe.Interop.dll')}" />
                <include name="${nant::scan-probing-paths('Interop.StarTeam.dll')}" />
                <include name="${nant::scan-probing-paths('Interop.WindowsInstaller.dll')}" />
                <include name="${nant::scan-probing-paths('Interop.MsmMergeTypeLib.dll')}" />
                <include name="${build.dir}/bin/SLiNgshoT.Core.dll" />
                <include name="${build.dir}/bin/NAnt.Contrib.Schemas.dll" />
                <include name="System.Data.dll" />
                <include name="System.DirectoryServices.dll" />
                <include name="System.Management.dll" />
                <include name="System.ServiceProcess.dll" />
                <include name="System.Web.dll" />
            </references>
            <resources>
                <include name="xsl/**" />
                <include name="${build.dir}/schema/Msi/NAnt.Contrib.Schemas.Msi" />
            </resources>
            <resources basedir="Tasks/NUnit2Report/xsl" prefix="xslt.">
                <include name="**/*.xsl" />
            </resources>
            <resources basedir="${etc.dir}">
                <include name="MSITaskErrors.mst" />
                <include name="MSITaskTemplate.msi" />
                <include name="MSMTaskErrors.mst" />
                <include name="MSMTaskTemplate.msm" />
            </resources>
        </csc>
    </target>

    <!-- Bootstrap the Xsd Task -->
    <target name="compile.schematask" description="compiles the Xsd task">
        <csc target="library" warnaserror="true" debug="${build.debug}" define="${current.build.defines}" output="${build.dir}/bin/NAnt.Xsd.Tasks.dll">
            <sources>
                <include name="Tasks/XsdTask.cs" />
            </sources>
            <references>
                <include name="System.Data.dll" />
                <include name="${build.dir}/bin/NAnt.Core.dll" />
                <include name="${build.dir}/bin/NAnt.DotNetTasks.dll" />
            </references>
        </csc>
    </target>   
    
    <!-- Build the SLiNgshoT.Core.dll assemblies -->
    <target name="build.slingshot" description="Compiles and copies the SLiNgshoT assemblies">
        <nant buildfile="${tools.dir}/SLiNgshoT/SLiNgshoT.build" target="Release"/>
        <copy file="${tools.dir}/SLiNgshoT/build/Release/SLiNgshoT.Core.dll" tofile="${build.dir}/bin/SLiNgshoT.Core.dll"/>
        <copy file="${tools.dir}/SLiNgshoT/build/Release/SLiNgshoT.exe" tofile="${build.dir}/bin/SLiNgshoT.exe"/>
    </target>

    <!-- Bootstrap XML Schemas into assemblies for task validation -->
    <target name="compile.schemas" depends="compile.schematask" description="compiles Task XML Schemas into assemblies">
        <uptodate property="schema.uptodate">
            <sourcefiles>
                <include name="Tasks/Msi/MsiTask.xsd" />
            </sourcefiles>
            <targetfiles basedir="${build.dir}/schema/Msi">
                <include name="MsiTask.cs" />
            </targetfiles>
        </uptodate>
        <if test="${not schema.uptodate}">
            <mkdir dir="${build.dir}/schema/Msi" unless="${directory::exists(build.dir + '/schema/Msi')}" />
            <loadtasks assembly="${build.dir}/bin/NAnt.Xsd.Tasks.dll" />
            <xsd 
                schema="Tasks/Msi/MsiTask.xsd"
                language="CS"
                namespace="NAnt.Contrib.Schemas.Msi"
                outputdir="${build.dir}/schema/Msi"
                uri="NAnt.Contrib.Tasks.Msi.MsiTask" />

            <!-- workaround to have the Msi tasks building -->
            <copy file="${build.dir}/schema/Msi/MsiTask.cs" tofile="${src.dir}/Nant.Contrib/Tasks/Msi/Msi.cs" overwrite="true"/>
        </if>
    </target>
</project>
