<?xml version="1.0"?>
<project name="NAnt.MSNet" default="build">
    <!--
        Required properties:
            * build.dir             - (path) root level to build to, assemblies will go in ${build.dir}/bin
            * build.debug           - (true|false) debug build?
            * build.warnaserror     - (true|false) treat warnings as errors
            * current.build.defines - framework-specific build defines
    -->
    <target name="build" if="${framework::get-family(framework::get-target-framework()) == 'net'}">
        <!-- build main assembly -->
        <csc target="library" define="${current.build.defines}" warnaserror="${build.warnaserror}" debug="${build.debug}" output="${build.dir}/bin/${project::get-name()}Tasks.dll" doc="${build.dir}/bin/${project::get-name()}Tasks.xml">
            <warnaserror>
                <!-- do not consider deprecation warnings as errors on .NET 2.0 -->
                <exclude number="618" if="${framework::get-target-framework() == 'net-2.0'}" />
            </warnaserror>
            <nowarn>
                <!-- ignore AssemblyInformalVersion warning -->
                <warning number="1607" />
            </nowarn>
            <sources>
                <include name="**/*.cs" />
                <!-- extra tasks that for now only build on Microsoft .NET framework -->
                <include name="../NAnt.Core/Tasks/ScriptTask.cs" />
                <!-- common assembly-level attributes -->
                <include name="${path::combine(src.dir, 'SolutionInfo.cs')}" />
            </sources>
            <references>
                <include name="${build.dir}/bin/NAnt.Core.dll" />
                <include name="${build.dir}/bin/NAnt.DotNetTasks.dll" />
                <include name="Microsoft.JScript.dll" />
                <include name="System.ServiceProcess.dll" />
            </references>
            <resources prefix="NAnt.MSNet" dynamicprefix="true">
                <include name="Resources/**/*" />
            </resources>
        </csc>
    </target>
</project>
