<?xml version="1.0"?>
<project name="NAnt.Console" default="build">
    <!--
        Required properties:
            * build.dir             - (path) root level to build to, assemblies will go in ${build.dir}/bin
            * build.debug           - (true|false) debug build?
            * build.warnaserror     - (true|false) treat warnings as errors
            * current.build.defines - framework-specific build defines
            * nant.console.name     - assembly name for NAnt Console
    -->
    <target name="build">
        <!-- Target Config (App.config) Filename and path -->
        <property name="target.config.file" value="${build.dir}/bin/${nant.console.name}.exe.config" />
        <!-- build NAnt.Console -->
        <csc target="exe" define="${current.build.defines}" warnaserror="${build.warnaserror}" debug="${build.debug}" output="${build.dir}/bin/${nant.console.name}.exe" doc="${build.dir}/bin/${nant.console.name}.xml">
            <warnaserror>
                <!-- do not consider deprecation warnings as errors on .NET 2.0 (and higher)-->
                <exclude number="618" if="${framework::get-family(framework::get-target-framework())== 'net' and framework::get-version(framework::get-target-framework()) >= version::parse('2.0')}" />
            </warnaserror>
            <nowarn>
                <!-- 
                    (g)mcs currently does not support /warnaserror option that
                    takes list of warnings not to treat as errors, so we have
                    to use /nowarn instead
                -->
                <warning number="618" if="${framework::get-family(framework::get-target-framework())== 'mono' and framework::get-version(framework::get-target-framework()) >= version::parse('2.0')}" />
                <warning number="612" if="${framework::get-family(framework::get-target-framework())== 'mono' and framework::get-version(framework::get-target-framework()) >= version::parse('2.0')}" />
                <!-- ignore AssemblyInformalVersion warning -->
                <warning number="1607" />
            </nowarn>
            <sources failonempty="true">
                <include name="**/*.cs" />
                <!-- common assembly-level attributes -->
                <include name="${path::combine(src.dir, 'SolutionInfo.cs')}" />
            </sources>
            <references>
                <include name="${build.dir}/bin/log4net.dll" />
                <include name="System.Configuration.dll" />
                <include name="System.Xml.dll" />
            </references>
            <resources>
                <include name="*.resx"/>
            </resources>
        </csc>
        <copy tofile="${target.config.file}" file="App.config" />
        <!-- If the target framework is 4.0 or greater, disable the Legacy Security Policy -->
        <!-- This section is disabled until the documentation (NDoc) can run without the
             NetFx40_LegacySecurityPolicy flag set or a replacement for NDoc can be found.

        <if test="${framework::get-version(framework::get-target-framework()) &gt;= version::parse('4.0')}">
            <xmlpoke file="${target.config.file}" xpath="/configuration/runtime/NetFx40_LegacySecurityPolicy/@enabled" value="false" />
        </if>
        -->
    </target>
</project>
