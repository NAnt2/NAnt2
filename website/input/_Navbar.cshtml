@{
    List<Tuple<string, string>> pages = new List<Tuple<string, string>>
    {
        Tuple.Create("Blog", Context.GetLink("blog")),
        Tuple.Create("Documentation", Context.GetLink("docs")),
        Tuple.Create("Reference", Context.GetLink("dsl")),
        Tuple.Create("API", Context.GetLink("api")),
        Tuple.Create("FAQ", Context.GetLink("faq")),
        Tuple.Create("<i class=\"fa fa-github\"></i> Source", "https://github.com/savornicesei/NAnt2")
    };

    /*
    List<Tuple<string, string>> pages = Context
        .Documents[Docs.Pages]
        .Where(x => x.Bool(DocsKeys.ShowInNavbar, true))
        .Where(x => x.FilePath(Keys.RelativeFilePath)?.FullPath?.StartsWith("index") == (bool?)false)
        .Select(x => Tuple.Create(x.WithoutSettings.String(Keys.Title), Context.GetLink(x)))
        .Where(x => !string.IsNullOrEmpty(x.Item1))
        .OrderBy(x => x.Item1)
        .ToList();
    if(Documents[Docs.BlogPosts].Any())
    {
        pages.Add(Tuple.Create(Context.String(DocsKeys.BlogTitle), Context.GetLink(Context.String(DocsKeys.BlogPath))));
    }
    if(Documents[Docs.Api].Any())
    {
        pages.Add(Tuple.Create("API", Context.GetLink(Context.DirectoryPath(DocsKeys.ApiPath))));
    }
*/

    foreach(Tuple<string, string> p in pages)
    {
        string active = Context.GetLink(Document).StartsWith(p.Item2) ? "active" : null;
        <li class="@active"><a href="@p.Item2">@Html.Raw(p.Item1)</a></li>
    }
}