@{	
	IDocument containingAssembly = Model.Get<IDocument>("ContainingAssembly");
	if(containingAssembly != null)
	{
		<li class="header">Assembly</li>
		<li>@Context.GetTypeLink(containingAssembly, false)</li>
	}

	IDocument containingNamespace = Model.Get<IDocument>("ContainingNamespace");
	if(containingNamespace != null)
	{
		<li class="header">Namespace</li>
		<li>@Context.GetTypeLink(containingNamespace, false)</li>
		
		<li role="separator" class="divider"></li>
		
		foreach(IGrouping<string, IDocument> typeGroup 
			in containingNamespace.List<IDocument>("MemberTypes")
				.Where(x => x.Bool("IsResult") && x["Kind"].Equals("NamedType"))
				.GroupBy(x => x.String("SpecificKind")))
		{
			<li class="header">@typeGroup.Key Types</li>
			foreach(IDocument type in typeGroup
				.OrderBy(x => x.String("Name")))
			{
				string selectedClass = type.String("SymbolId") == Model.String("SymbolId") ? "selected" : null;
				<li class="@selectedClass">@Context.GetTypeLink(type, false)</li>
			}	
		}
	}
}