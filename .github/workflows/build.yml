name: NAnt2 build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  # Stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  # Project name to pack and publish
  PROJECT_NAME: NAnt2
  #Project version
  PROJECT_VERSION: 0.95

jobs:
  win-build:
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install NMake; CMake is provided by default
        run: |
                choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
                call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"
                where resgen
        shell: cmd
      - name: Install mono on Windows
        run: |
              choco install -y mono
        shell: cmd
      - name: Build with nmake on Windows
        run: |
              nmake -f Makefile.nmake build-nant prefix="" TARGET=net-4.5 build=${{github.run_number}} version=$PROJECT_VERSION
        shell: cmd
      - name: Run tests with nmake on Windows
        run: |
                nmake -f Makefile.nmake run-test prefix="" TARGET=net-4.5 build=${{github.run_number}} version=$PROJECT_VERSION
        shell: cmd
      - name: Check mono version
        run: mono --version
        shell: bash
      - name: Build with make on Windows
        run: make clean build-nant TARGET=mono-4.5 MCS="mcs -sdk:4.5"
        shell: bash
      - name: Run tests with make on Windows
        run: make clean run-tests TARGET=mono-4.5 MCS="mcs -sdk:4.5"
  nix-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install mono
        run: |
              if [ "${RUNNER_OS}" == "macOS" ]; then
                brew install mono
              else
                sudo apt-get update -y
                sudo apt-get install -y dirmngr gnupg apt-transport-https ca-certificates software-properties-common
                sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
                echo "deb http://download.mono-project.com/repo/ubuntu stable-$(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list
                sudo apt-get update -y
                sudo apt-get install -y mono-complete
              fi
        shell: bash
      - name: Check mono version
        run: mono --version
        shell: bash
      - name: Build with make
        run: make clean build-nant TARGET=mono-4.5 MCS="mcs -sdk:4.5"
        shell: bash
      - name: Run tests with make
        run: make clean run-tests TARGET=mono-4.5 MCS="mcs -sdk:4.5"